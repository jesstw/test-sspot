name: Example Workflow # Change the workflow name if you want

on:
  push:
  workflow_dispatch:
jobs:
  orchestration:
    runs-on: github-actions
    outputs:
      tasks: ${{ steps.run.outputs.tasks }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authentication + Get Tasks
        id: run
        uses: stack-spot/runtime-manager-action@v1
        with:
         CLIENT_ID: ${{ 01HGG6MC303TME1SXFVHQ2NE4G }}
         CLIENT_KEY: ${{ brOjFXnXzygleBeUpbdpmZVHx9KvoWpo }}
         CLIENT_REALM: ${{ stackspot-freemium }}
         WORKSPACE: test-docs
         ENVIRONMENT: test
         VERSION_TAG: my_tag
         TF_STATE_BUCKET_NAME: test-mybucket-jess
         TF_STATE_REGION: sa-east-1
         IAC_BUCKET_NAME: test-mybucket-jess
         IAC_REGION: sa-east-1
         VERBOSE: true                      # not mandatory
         BRANCH: main                       # not mandatory
         OPEN_API_PATH: swagger.yaml        # not mandatory
  provision:
    runs-on: ubuntu-latest # <- self-hosted-runner, add here your Organization runner
    needs: [orchestration]
    strategy:
       matrix:
         task: ${{ fromJSON(needs.orchestration.outputs.tasks) }}
       fail-fast: true
       max-parallel: 1
    steps:
      - name: Job IAC
        if: contains( matrix.task.taskType , 'IAC')
        uses: stack-spot/runtime-iac-action@v1
        with:
         FEATURES_LEVEL_LOG: debug
         CLIENT_ID: ${{ 01HGG6MC303TME1SXFVHQ2NE4G }}
         CLIENT_KEY: ${{ brOjFXnXzygleBeUpbdpmZVHx9KvoWpo }}
         CLIENT_REALM: ${{ stackspot-freemium }}
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
         AWS_REGION: sa-east-1
         RUN_TASK_ID: ${{ matrix.task.runTaskId }}
         BASE_PATH_OUTPUT: path/to/save/file      # not mandatory

      - name: Job DEPLOY
        if: contains( matrix.task.taskType , DEPLOY)
        uses: stack-spot/runtime-deploy-action@v1
        with:
         FEATURES_LEVEL_LOG: debug
         CLIENT_ID: ${{ 01HGG6MC303TME1SXFVHQ2NE4G }}
         CLIENT_KEY: ${{ brOjFXnXzygleBeUpbdpmZVHx9KvoWpo }}
         CLIENT_REALM: ${{ stackspot-freemium }}
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
         AWS_REGION: sa-east-1
         REPOSITORY_NAME: ${{ github.event.repository.name }}
         RUN_TASK_ID: ${{ matrix.task.runTaskId }}
      - name: Job DESTROY
        if: contains( matrix.task.taskType , DESTROY)
        uses: stack-spot/runtime-destroy-action@v1
        with:
         FEATURES_LEVEL_LOG: debug
         CLIENT_ID: ${{ 01HGG6MC303TME1SXFVHQ2NE4G }}
         CLIENT_KEY: ${{ brOjFXnXzygleBeUpbdpmZVHx9KvoWpo }}
         CLIENT_REALM: ${{ stackspot-freemium }}
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
         AWS_REGION: sa-east-1
         REPOSITORY_NAME: ${{ github.event.repository.name }}
         RUN_TASK_ID: ${{ matrix.task.runTaskId }}
